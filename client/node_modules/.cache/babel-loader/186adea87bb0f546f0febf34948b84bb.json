{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kapil D\\\\Personal\\\\DecentralizedDeliveries\\\\client\\\\src\\\\components\\\\ProclaimDelivery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProclaimDelivery = () => {\n  _s();\n\n  const {\n    state: {\n      contract,\n      accounts\n    }\n  } = useEth();\n  const deliveryHash = useRef('');\n\n  const proclaimDelivery = async () => {\n    const hash = deliveryHash.current.value;\n\n    if (hash === '') {\n      alert('Please enter the delivery key');\n      return;\n    }\n\n    try {\n      await contract.methods.allegeDelivery(hash).send({\n        from: accounts[0]\n      }).then(response => {\n        console.log(response);\n      });\n    } catch (err) {\n      alert(\"Invalid delivery key.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Proclaim your delivery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Correct delivery hash\",\n      ref: deliveryHash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: proclaimDelivery,\n      children: \"Proclaim Delivery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProclaimDelivery, \"V4d8oZMCADNmVErStx4De/lgpEk=\", false, function () {\n  return [useEth];\n});\n\n_c = ProclaimDelivery;\nexport default ProclaimDelivery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProclaimDelivery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useEth","ProclaimDelivery","state","contract","accounts","deliveryHash","proclaimDelivery","hash","current","value","alert","methods","allegeDelivery","send","from","then","response","console","log","err"],"sources":["D:/Kapil D/Personal/DecentralizedDeliveries/client/src/components/ProclaimDelivery.jsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\nconst ProclaimDelivery = () => {\r\n  \r\n    const { state: { contract, accounts } } = useEth();\r\n    const deliveryHash = useRef('');\r\n\r\n    const proclaimDelivery = async () => {\r\n      const hash = deliveryHash.current.value;\r\n      if(hash === '') {\r\n        alert('Please enter the delivery key');\r\n        return;\r\n      }\r\n      try {\r\n        await contract.methods.allegeDelivery(hash).send({from: accounts[0]}).then((response) => {\r\n          console.log(response)\r\n        })\r\n      } catch(err) {\r\n        alert(\"Invalid delivery key.\")\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Proclaim your delivery</h1>\r\n        <input type=\"text\" placeholder='Correct delivery hash' ref={deliveryHash} /><br />\r\n        <button onClick={proclaimDelivery}>Proclaim Delivery</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProclaimDelivery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAE3B,MAAM;IAAEC,KAAK,EAAE;MAAEC,QAAF;MAAYC;IAAZ;EAAT,IAAoCJ,MAAM,EAAhD;EACA,MAAMK,YAAY,GAAGN,MAAM,CAAC,EAAD,CAA3B;;EAEA,MAAMO,gBAAgB,GAAG,YAAY;IACnC,MAAMC,IAAI,GAAGF,YAAY,CAACG,OAAb,CAAqBC,KAAlC;;IACA,IAAGF,IAAI,KAAK,EAAZ,EAAgB;MACdG,KAAK,CAAC,+BAAD,CAAL;MACA;IACD;;IACD,IAAI;MACF,MAAMP,QAAQ,CAACQ,OAAT,CAAiBC,cAAjB,CAAgCL,IAAhC,EAAsCM,IAAtC,CAA2C;QAACC,IAAI,EAAEV,QAAQ,CAAC,CAAD;MAAf,CAA3C,EAAgEW,IAAhE,CAAsEC,QAAD,IAAc;QACvFC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACD,CAFK,CAAN;IAGD,CAJD,CAIE,OAAMG,GAAN,EAAW;MACXT,KAAK,CAAC,uBAAD,CAAL;IACD;EACF,CAbD;;EAeF,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC,uBAA/B;MAAuD,GAAG,EAAEL;IAA5D;MAAA;MAAA;MAAA;IAAA,QAFJ,eAEgF;MAAA;MAAA;MAAA;IAAA,QAFhF,eAGI;MAAQ,OAAO,EAAEC,gBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3BD;;GAAML,gB;UAEwCD,M;;;KAFxCC,gB;AA6BN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}