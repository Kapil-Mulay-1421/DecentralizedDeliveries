{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _toConsumableArray = require(\"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _objectSpread = require(\"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _slicedToArray = require(\"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar Account = require('eth-lib/lib/account');\n\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\n\nvar scrypt = require('scrypt-js');\n\nvar uuid = require('uuid');\n\nvar utils = require('web3-utils');\n\nvar helpers = require('web3-core-helpers');\n\nvar _require = require('@ethereumjs/tx'),\n    TransactionFactory = _require.TransactionFactory;\n\nvar Common = require('@ethereumjs/common').default;\n\nvar HardForks = require('@ethereumjs/common').Hardfork;\n\nvar ethereumjsUtil = require('ethereumjs-util');\n\nvar isNot = function isNot(value) {\n  return typeof value === 'undefined' || value === null;\n};\n\nvar isExist = function isExist(value) {\n  return typeof value !== 'undefined' && value !== null;\n};\n\nvar Accounts = function Accounts() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // remove unecessary core functions\n\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  }), new Method({\n    name: 'getBlockByNumber',\n    call: 'eth_getBlockByNumber',\n    params: 2,\n    inputFormatter: [function (blockNumber) {\n      return blockNumber ? utils.toHex(blockNumber) : 'latest';\n    }, function () {\n      return false;\n    }]\n  })]; // attach methods to this._ethereumCall\n\n  this._ethereumCall = {};\n\n  _ethereumCall.forEach(function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n\n  this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this; // add sign functions\n\n\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n\n  return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n      error = false,\n      transactionOptions = {},\n      hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n\n  callback = callback || function () {};\n\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  if (isExist(tx.common) && isNot(tx.common.customChain)) {\n    error = new Error('If tx.common is provided it must have tx.common.customChain');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  if (isExist(tx.common) && isNot(tx.common.customChain.chainId)) {\n    error = new Error('If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  if (isExist(tx.common) && isExist(tx.common.customChain.chainId) && isExist(tx.chainId) && tx.chainId !== tx.common.customChain.chainId) {\n    error = new Error('Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  function signed(tx) {\n    var error = _validateTransactionForSigning(tx);\n\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.gasLimit = transaction.gasLimit || transaction.gas;\n      if (transaction.type === '0x1' && transaction.accessList === undefined) transaction.accessList = []; // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, transaction.hardfork || HardForks.London);\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || HardForks.London);\n          delete transaction.common;\n        }\n\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n\n      var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n      var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationErrors = signedTx.validate(true);\n\n      if (validationErrors.length > 0) {\n        var errorString = 'Signer Error: ';\n\n        var _iterator = _createForOfIteratorHelper(validationErrors),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var validationError = _step.value;\n            errorString += \"\".concat(errorString, \" \").concat(validationError, \".\");\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        throw new Error(errorString);\n      }\n\n      var rlpEncoded = signedTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n        v: '0x' + signedTx.v.toString('hex'),\n        r: '0x' + signedTx.r.toString('hex'),\n        s: '0x' + signedTx.s.toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  }\n\n  tx.type = _handleTxType(tx); // Resolve immediately if nonce, chainId, price and signing options are provided\n\n  if (tx.nonce !== undefined && tx.chainId !== undefined && (tx.gasPrice !== undefined || tx.maxFeePerGas !== undefined && tx.maxPriorityFeePerGas !== undefined) && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  } // Otherwise, get the missing info from the Ethereum Node\n\n\n  return Promise.all([isNot(tx.common) || isNot(tx.common.customChain.chainId) ? //tx.common.customChain.chainId is not optional inside tx.common if tx.common is provided\n  isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId : undefined, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1, _handleTxPricing(_this, tx)]).then(function (args) {\n    var _args = _slicedToArray(args, 4),\n        txchainId = _args[0],\n        txnonce = _args[1],\n        txnetworkId = _args[2],\n        txgasInfo = _args[3];\n\n    if (isNot(txchainId) && isNot(tx.common) && isNot(tx.common.customChain.chainId) || isNot(txnonce) || isNot(txnetworkId) || isNot(txgasInfo)) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n\n    return signed(_objectSpread(_objectSpread(_objectSpread({}, tx), isNot(tx.common) || isNot(tx.common.customChain.chainId) ? {\n      chainId: txchainId\n    } : {}), {}, {\n      nonce: txnonce,\n      networkId: txnetworkId\n    }, txgasInfo));\n  });\n};\n\nfunction _validateTransactionForSigning(tx) {\n  if (tx.common && tx.chain && tx.hardfork) {\n    return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n  }\n\n  if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n    return new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n  }\n\n  if (!tx.gas && !tx.gasLimit && !tx.maxPriorityFeePerGas && !tx.maxFeePerGas) {\n    return new Error('\"gas\" is missing');\n  }\n\n  if (tx.gas && tx.gasPrice) {\n    if (tx.gas < 0 || tx.gasPrice < 0) {\n      return new Error('Gas or gasPrice is lower than 0');\n    }\n  } else {\n    if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n      return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n    }\n  }\n\n  if (tx.nonce < 0 || tx.chainId < 0) {\n    return new Error('Nonce or chainId is lower than 0');\n  }\n\n  return;\n}\n\nfunction _handleTxType(tx) {\n  // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n  var hasEip1559 = tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined;\n  var txType;\n\n  if (tx.type !== undefined) {\n    txType = utils.toHex(tx.type);\n  } else if (tx.type === undefined && hasEip1559) {\n    txType = '0x2';\n  }\n\n  if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559)) throw Error(\"eip-1559 transactions don't support gasPrice\");\n  if ((txType === '0x1' || txType === '0x0') && hasEip1559) throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n\n  if (hasEip1559 || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London) {\n    txType = '0x2';\n  } else if (tx.accessList || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin) {\n    txType = '0x1';\n  }\n\n  return txType;\n}\n\nfunction _handleTxPricing(_this, tx) {\n  return new Promise(function (resolve, reject) {\n    try {\n      if ((tx.type === undefined || tx.type < '0x2') && tx.gasPrice !== undefined) {\n        // Legacy transaction, return provided gasPrice\n        resolve({\n          gasPrice: tx.gasPrice\n        });\n      } else {\n        Promise.all([_this._ethereumCall.getBlockByNumber(), _this._ethereumCall.getGasPrice()]).then(function (responses) {\n          var _responses = _slicedToArray(responses, 2),\n              block = _responses[0],\n              gasPrice = _responses[1];\n\n          if (tx.type === '0x2' && block && block.baseFeePerGas) {\n            // The network supports EIP-1559\n            // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n            var maxPriorityFeePerGas, maxFeePerGas;\n\n            if (tx.gasPrice) {\n              // Using legacy gasPrice property on an eip-1559 network,\n              // so use gasPrice as both fee properties\n              maxPriorityFeePerGas = tx.gasPrice;\n              maxFeePerGas = tx.gasPrice;\n              delete tx.gasPrice;\n            } else {\n              maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n\n              maxFeePerGas = tx.maxFeePerGas || utils.toHex(utils.toBN(block.baseFeePerGas).mul(utils.toBN(2)).add(utils.toBN(maxPriorityFeePerGas)));\n            }\n\n            resolve({\n              maxFeePerGas: maxFeePerGas,\n              maxPriorityFeePerGas: maxPriorityFeePerGas\n            });\n          } else {\n            if (tx.maxPriorityFeePerGas || tx.maxFeePerGas) throw Error(\"Network doesn't support eip-1559\");\n            resolve({\n              gasPrice: gasPrice\n            });\n          }\n        });\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n/* jshint ignore:start */\n\n\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  var txOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Rely on EthereumJs/tx to determine the type of transaction\n  var data = Buffer.from(rawTx.slice(2), \"hex\");\n  var tx = TransactionFactory.fromSerializedData(data); //update checksum\n\n  return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\n\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n\n  if (!!message && typeof message === 'object') {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n\n  return Account.recover(message, signature);\n}; // Taken from https://github.com/ethereumjs/ethereumjs-wallet\n\n\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!(typeof password === 'string')) {\n    throw new Error('No password given.');\n  }\n\n  var json = !!v3Keystore && typeof v3Keystore === 'object' ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([].concat(_toConsumableArray(decipher.update(ciphertext)), _toConsumableArray(decipher.final()))).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = Buffer.from([].concat(_toConsumableArray(cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex'))), _toConsumableArray(cipher.final())));\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n}; // Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\n\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n\n  if (this.hasOwnProperty(pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\n\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\n\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n\n  return this;\n};\n\nWallet.prototype.add = function (account) {\n  if (typeof account === 'string') {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\n\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address]; // address lowercase\n\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()]; // index\n\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nWallet.prototype.clear = function () {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\n\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\n\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\n\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\n\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n\n  return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\n\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = self[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' || // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nmodule.exports = Accounts;","map":{"version":3,"names":["core","require","Method","Account","cryp","global","scrypt","uuid","utils","helpers","TransactionFactory","Common","default","HardForks","Hardfork","ethereumjsUtil","isNot","value","isExist","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","blockNumber","toHex","forEach","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","customChain","chainId","signed","_validateTransactionForSigning","transaction","formatters","inputCallFormatter","Object","assign","gasLimit","gas","type","accessList","undefined","forCustomChain","networkId","London","baseChain","substring","ethTx","fromTxData","signedTx","Buffer","from","validationErrors","validate","errorString","validationError","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","getMessageToSign","v","r","s","e","_handleTxType","nonce","gasPrice","maxFeePerGas","maxPriorityFeePerGas","resolve","all","getChainId","getTransactionCount","getNetworkId","_handleTxPricing","then","args","txchainId","txnonce","txnetworkId","txgasInfo","JSON","stringify","hasEip1559","txType","toLowerCase","Berlin","getBlockByNumber","getGasPrice","responses","block","baseFeePerGas","toBN","mul","add","recoverTransaction","rawTx","txOptions","slice","fromSerializedData","toChecksumAddress","getSenderAddress","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","concat","bufferToHex","hash","signature","vrs","decodeSignature","message","recover","preFixed","apply","encodeSignature","decrypt","v3Keystore","nonStrict","json","parse","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","hasOwnProperty","_currentIndexes","keys","indexes","map","key","filter","numberOfAccounts","i","index","remove","addressOrIndex","clear","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","storage","self","x","removeItem","code","module","exports"],"sources":["D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/web3-eth-accounts/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar { TransactionFactory } = require('@ethereumjs/tx');\nvar Common = require('@ethereumjs/common').default;\nvar HardForks = require('@ethereumjs/common').Hardfork;\nvar ethereumjsUtil = require('ethereumjs-util');\nvar isNot = function (value) {\n    return (typeof value === 'undefined') || value === null;\n};\nvar isExist = function (value) {\n    return (typeof value !== 'undefined') && value !== null;\n};\nvar Accounts = function Accounts() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function (address) {\n                    if (utils.isAddress(address)) {\n                        return address;\n                    }\n                    else {\n                        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                    }\n                }, function () {\n                    return 'latest';\n                }]\n        }),\n        new Method({\n            name: 'getBlockByNumber',\n            call: 'eth_getBlockByNumber',\n            params: 2,\n            inputFormatter: [function (blockNumber) {\n                    return blockNumber ? utils.toHex(blockNumber) : 'latest';\n                }, function () {\n                    return false;\n                }]\n        }),\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _ethereumCall.forEach((method) => {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n    this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n    var _this = this;\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n    return account;\n};\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this, error = false, transactionOptions = {}, hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n    callback = callback || function () { };\n    if (!tx) {\n        error = new Error('No transaction object given!');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isNot(tx.common.customChain)) {\n        error = new Error('If tx.common is provided it must have tx.common.customChain');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isNot(tx.common.customChain.chainId)) {\n        error = new Error('If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isExist(tx.common.customChain.chainId) && isExist(tx.chainId) && tx.chainId !== tx.common.customChain.chainId) {\n        error = new Error('Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n        callback(error);\n        return Promise.reject(error);\n    }\n    function signed(tx) {\n        const error = _validateTransactionForSigning(tx);\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.gasLimit = transaction.gasLimit || transaction.gas;\n            if (transaction.type === '0x1' && transaction.accessList === undefined)\n                transaction.accessList = [];\n            // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain('mainnet', {\n                    name: 'custom-network',\n                    networkId: transaction.networkId,\n                    chainId: transaction.chainId\n                }, transaction.hardfork || HardForks.London);\n                delete transaction.networkId;\n            }\n            else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n                        name: transaction.common.customChain.name || 'custom-network',\n                        networkId: transaction.common.customChain.networkId,\n                        chainId: transaction.common.customChain.chainId\n                    }, transaction.common.hardfork || HardForks.London);\n                    delete transaction.common;\n                }\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n            var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n            var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n            var validationErrors = signedTx.validate(true);\n            if (validationErrors.length > 0) {\n                let errorString = 'Signer Error: ';\n                for (const validationError of validationErrors) {\n                    errorString += `${errorString} ${validationError}.`;\n                }\n                throw new Error(errorString);\n            }\n            var rlpEncoded = signedTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n            var result = {\n                messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n                v: '0x' + signedTx.v.toString('hex'),\n                r: '0x' + signedTx.r.toString('hex'),\n                s: '0x' + signedTx.s.toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n            callback(null, result);\n            return result;\n        }\n        catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n    tx.type = _handleTxType(tx);\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined &&\n        tx.chainId !== undefined &&\n        (tx.gasPrice !== undefined ||\n            (tx.maxFeePerGas !== undefined &&\n                tx.maxPriorityFeePerGas !== undefined)) &&\n        hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        ((isNot(tx.common) || isNot(tx.common.customChain.chainId)) ? //tx.common.customChain.chainId is not optional inside tx.common if tx.common is provided\n            (isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId)\n            : undefined),\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1,\n        _handleTxPricing(_this, tx)\n    ]).then(function (args) {\n        const [txchainId, txnonce, txnetworkId, txgasInfo] = args;\n        if ((isNot(txchainId) && isNot(tx.common) && isNot(tx.common.customChain.chainId)) || isNot(txnonce) || isNot(txnetworkId) || isNot(txgasInfo)) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed({\n            ...tx,\n            ...((isNot(tx.common) || isNot(tx.common.customChain.chainId)) ? { chainId: txchainId } : {}),\n            nonce: txnonce,\n            networkId: txnetworkId,\n            ...txgasInfo // Will either be gasPrice or maxFeePerGas and maxPriorityFeePerGas\n        });\n    });\n};\nfunction _validateTransactionForSigning(tx) {\n    if (tx.common && (tx.chain && tx.hardfork)) {\n        return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n    }\n    if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n        return new Error('When specifying chain and hardfork, both values must be defined. ' +\n            'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if ((!tx.gas && !tx.gasLimit) &&\n        (!tx.maxPriorityFeePerGas && !tx.maxFeePerGas)) {\n        return new Error('\"gas\" is missing');\n    }\n    if (tx.gas && tx.gasPrice) {\n        if (tx.gas < 0 || tx.gasPrice < 0) {\n            return new Error('Gas or gasPrice is lower than 0');\n        }\n    }\n    else {\n        if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n            return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n        }\n    }\n    if (tx.nonce < 0 || tx.chainId < 0) {\n        return new Error('Nonce or chainId is lower than 0');\n    }\n    return;\n}\nfunction _handleTxType(tx) {\n    // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n    const hasEip1559 = (tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined);\n    let txType;\n    if (tx.type !== undefined) {\n        txType = utils.toHex(tx.type);\n    }\n    else if (tx.type === undefined && hasEip1559) {\n        txType = '0x2';\n    }\n    if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559))\n        throw Error(\"eip-1559 transactions don't support gasPrice\");\n    if ((txType === '0x1' || txType === '0x0') && hasEip1559)\n        throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n    if (hasEip1559 ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London))) {\n        txType = '0x2';\n    }\n    else if (tx.accessList ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin))) {\n        txType = '0x1';\n    }\n    return txType;\n}\nfunction _handleTxPricing(_this, tx) {\n    return new Promise((resolve, reject) => {\n        try {\n            if ((tx.type === undefined || tx.type < '0x2')\n                && tx.gasPrice !== undefined) {\n                // Legacy transaction, return provided gasPrice\n                resolve({ gasPrice: tx.gasPrice });\n            }\n            else {\n                Promise.all([\n                    _this._ethereumCall.getBlockByNumber(),\n                    _this._ethereumCall.getGasPrice()\n                ]).then(responses => {\n                    const [block, gasPrice] = responses;\n                    if ((tx.type === '0x2') &&\n                        block && block.baseFeePerGas) {\n                        // The network supports EIP-1559\n                        // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n                        let maxPriorityFeePerGas, maxFeePerGas;\n                        if (tx.gasPrice) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            maxPriorityFeePerGas = tx.gasPrice;\n                            maxFeePerGas = tx.gasPrice;\n                            delete tx.gasPrice;\n                        }\n                        else {\n                            maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n                            maxFeePerGas = tx.maxFeePerGas ||\n                                utils.toHex(utils.toBN(block.baseFeePerGas)\n                                    .mul(utils.toBN(2))\n                                    .add(utils.toBN(maxPriorityFeePerGas)));\n                        }\n                        resolve({ maxFeePerGas, maxPriorityFeePerGas });\n                    }\n                    else {\n                        if (tx.maxPriorityFeePerGas || tx.maxFeePerGas)\n                            throw Error(\"Network doesn't support eip-1559\");\n                        resolve({ gasPrice });\n                    }\n                });\n            }\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx, txOptions = {}) {\n    // Rely on EthereumJs/tx to determine the type of transaction\n    const data = Buffer.from(rawTx.slice(2), \"hex\");\n    const tx = TransactionFactory.fromSerializedData(data);\n    //update checksum\n    return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex);\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n    if (!!message && typeof message === 'object') {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n    if (!(typeof password === 'string')) {\n        throw new Error('No password given.');\n    }\n    var json = (!!v3Keystore && typeof v3Keystore === 'object') ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n    return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else {\n        throw new Error('Unsupported kdf');\n    }\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()\n    ]);\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    return {\n        version: 3,\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n    pointer = pointer || 0;\n    if (this.hasOwnProperty(pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    }\n    else {\n        return pointer;\n    }\n};\nWallet.prototype._currentIndexes = function () {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function (key) {\n        return parseInt(key);\n    })\n        .filter(function (n) {\n        return (n < 9e20);\n    });\n    return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\nWallet.prototype.add = function (account) {\n    if (typeof account === 'string') {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n        this.length++;\n        return account;\n    }\n    else {\n        return this[account.address];\n    }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n    var account = this[addressOrIndex];\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n        this.length--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nWallet.prototype.clear = function () {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    indexes.forEach(function (index) {\n        _this.remove(index);\n    });\n    return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    var accounts = indexes.map(function (index) {\n        return _this[index].encrypt(password, options);\n    });\n    return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n    var _this = this;\n    encryptedWallet.forEach(function (keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n        if (account) {\n            _this.add(account);\n        }\n        else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n    return this;\n};\nWallet.prototype.save = function (password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n    return true;\n};\nWallet.prototype.load = function (password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        }\n        catch (e) {\n        }\n    }\n    return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = self[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e && (\n        // everything except Firefox\n        e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\nmodule.exports = Accounts;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}