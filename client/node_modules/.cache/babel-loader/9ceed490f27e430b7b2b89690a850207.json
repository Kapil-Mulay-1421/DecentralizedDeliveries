{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kapil D\\\\Personal\\\\DecentralizedDeliveries\\\\client\\\\src\\\\components\\\\RequestDelivery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet listening = false;\n\nconst RequestDelivery = () => {\n  _s();\n\n  const {\n    state: {\n      contract,\n      accounts\n    }\n  } = useEth();\n  const [to, setTo] = useState('');\n  const [from, setFrom] = useState('');\n  const [item, setItem] = useState('');\n  const [value, setValue] = useState(0);\n  window.allegeEvent = null;\n  const [requests, setRequests] = useState([]);\n\n  if (contract != null && !listening) {\n    window.allegeEvent = contract.events.AllegeEvent().on(\"data\", function (log) {\n      handleAllege(log);\n    });\n    listening = true;\n  }\n\n  const handleInput = e => {\n    switch (e.target.name) {\n      case 'to':\n        setTo(e.target.value);\n        break;\n\n      case 'from':\n        setFrom(e.target.value);\n        break;\n\n      case 'item':\n        setItem(e.target.value);\n        break;\n\n      case 'value':\n        setValue(e.target.value);\n        break;\n\n      default:\n        alert('Invalid input source.');\n        break;\n    }\n  };\n\n  const handleSubmit = async () => {\n    // Validation: \n    if (to === '' || from === '' || item === '' || value === 0) {\n      alert(\"Please fill in all the values.\");\n      return;\n    } // Calling Contract if validation succeeds: \n\n\n    await contract.methods.requestDelivery(to, from, item).send({\n      from: accounts[0],\n      value: value\n    }).then(response => {\n      console.log(response);\n      let tempArray = requests;\n      tempArray.push(response.events.RequestEvent.returnValues.requestId);\n      setRequests(tempArray);\n    });\n  };\n\n  window.handleConfirm = async index => {\n    let requestId = requests[index];\n    await contract.methods.confirm(requestId).send({\n      from: accounts[0]\n    });\n  };\n\n  const handleAllege = log => {\n    let requestId = log.returnValues.requestId;\n    let index = requests.indexOf(requestId);\n\n    if (requests.includes(requestId)) {\n      document.getElementById('wrapper').insertAdjacentHTML('beforeend', '<p>Requesting delivery confirmation of requestId ' + requestId + '</p>' + '<button onClick=\"window.handleConfirm(' + index + ')\">Confirm</button>');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Request a Delivery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"to\",\n      children: \"Delivery Destination: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"to\",\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"from\",\n      children: \"Pickup From: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"from\",\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"item\",\n      children: \"Pick this up: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"item\",\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"value\",\n      children: \"Attach payment(in wei): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"value\",\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequestDelivery, \"HqvWA3fqEt/1r6QUUGx1Imw+4TU=\", false, function () {\n  return [useEth];\n});\n\n_c = RequestDelivery;\nexport default RequestDelivery;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestDelivery\");","map":{"version":3,"names":["React","useState","useEth","listening","RequestDelivery","state","contract","accounts","to","setTo","from","setFrom","item","setItem","value","setValue","window","allegeEvent","requests","setRequests","events","AllegeEvent","on","log","handleAllege","handleInput","e","target","name","alert","handleSubmit","methods","requestDelivery","send","then","response","console","tempArray","push","RequestEvent","returnValues","requestId","handleConfirm","index","confirm","indexOf","includes","document","getElementById","insertAdjacentHTML"],"sources":["D:/Kapil D/Personal/DecentralizedDeliveries/client/src/components/RequestDelivery.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\nlet listening = false;\r\n\r\nconst RequestDelivery = () => {\r\n  const { state: { contract, accounts } } = useEth();\r\n\r\n  const [to, setTo] = useState('')\r\n  const [from, setFrom] = useState('')\r\n  const [item, setItem] = useState('')\r\n  const [value, setValue] = useState(0)\r\n  window.allegeEvent = null;\r\n  const [requests, setRequests] = useState([])\r\n\r\n  if (contract != null && !listening) {\r\n    window.allegeEvent = contract.events.AllegeEvent()\r\n    .on(\"data\", function(log) {\r\n      handleAllege(log);\r\n    })\r\n    listening = true;\r\n  }\r\n\r\n  const handleInput = e => {\r\n    switch(e.target.name) {\r\n        case 'to': \r\n            setTo(e.target.value);\r\n            break;\r\n        case 'from':\r\n            setFrom(e.target.value);\r\n            break;\r\n        case 'item': \r\n            setItem(e.target.value);\r\n            break;\r\n        case 'value': \r\n            setValue(e.target.value);\r\n            break;\r\n        default: \r\n            alert('Invalid input source.')\r\n            break;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    // Validation: \r\n    if (to === '' || from === '' || item === '' || value === 0) {\r\n        alert(\"Please fill in all the values.\")\r\n        return;\r\n    }\r\n\r\n    // Calling Contract if validation succeeds: \r\n    await contract.methods.requestDelivery(to, from, item).send({from: accounts[0], value: value}).then((response) => {\r\n      console.log(response)\r\n      let tempArray = requests\r\n      tempArray.push(response.events.RequestEvent.returnValues.requestId)\r\n      setRequests(tempArray)\r\n    })\r\n  }\r\n\r\n  window.handleConfirm = async (index) => {\r\n    let requestId = requests[index]\r\n    await contract.methods.confirm(requestId).send({from: accounts[0]})\r\n  }\r\n\r\n  const handleAllege = (log) => {\r\n    let requestId = log.returnValues.requestId\r\n    let index = requests.indexOf(requestId)\r\n    if (requests.includes(requestId)) {\r\n      document.getElementById('wrapper').insertAdjacentHTML('beforeend', \r\n                                                            '<p>Requesting delivery confirmation of requestId ' + requestId + '</p>' + \r\n                                                            '<button onClick=\"window.handleConfirm('+ index +')\">Confirm</button>')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='wrapper'>\r\n        <h1>Request a Delivery</h1>\r\n        <label htmlFor=\"to\">Delivery Destination: </label>\r\n        <input type=\"text\" name='to' onChange={handleInput}/>\r\n\r\n        <label htmlFor=\"from\">Pickup From: </label>\r\n        <input type=\"text\" name='from' onChange={handleInput}/>\r\n\r\n        <label htmlFor=\"item\">Pick this up: </label>\r\n        <input type=\"text\" name='item' onChange={handleInput} />\r\n\r\n        <label htmlFor=\"value\">Attach payment(in wei): </label>\r\n        <input type=\"number\" name='value' onChange={handleInput} />\r\n\r\n        <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RequestDelivery"],"mappings":"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"},"metadata":{},"sourceType":"module"}