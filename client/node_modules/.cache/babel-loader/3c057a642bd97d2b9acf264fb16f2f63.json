{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kapil D\\\\Personal\\\\DecentralizedDeliveries\\\\client\\\\src\\\\components\\\\Setup.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Setup() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preparation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Install\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Install Truffle and Ganache globally.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"$ npm install -g truffle ganache\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Ganache and MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Open a terminal and run Ganache, a simulated Ethereum blockchain on your machine.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"$ ganache\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"From the list of generated private keys, import the first one to MetaMask.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Truffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keep Ganache running and open another terminal. Let's compile and deploy our contracts to Ganache.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        children: [`$ cd truffle\\n`, `$ truffle migrate --network development\\n`, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dim-color\",\n          children: \"# The `development` network points to Ganache, it's configured in truffle/truffle-config.js on line 45.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Setup;\nexport default Setup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setup\");","map":{"version":3,"names":["Setup"],"sources":["D:/Kapil D/Personal/DecentralizedDeliveries/client/src/components/Setup.jsx"],"sourcesContent":["function Setup() {\n\n  return (\n    <>\n      <h2>Preparation</h2>\n\n      <details>\n        <summary>Install</summary>\n        <p>Install Truffle and Ganache globally.</p>\n        <code>$ npm install -g truffle ganache</code>\n      </details>\n\n      <details>\n        <summary>Ganache and MetaMask</summary>\n        <p>\n          Open a terminal and run Ganache, a simulated Ethereum blockchain on your machine.\n        </p>\n        <code>$ ganache</code>\n        <p>From the list of generated private keys, import the first one to MetaMask.</p>\n      </details>\n\n      <details>\n        <summary>Truffle</summary>\n        <p>\n          Keep Ganache running and open another terminal. Let's compile and deploy our\n          contracts to Ganache.\n        </p>\n        <code>\n          {`$ cd truffle\\n`}\n          {`$ truffle migrate --network development\\n`}\n          <span className=\"dim-color\">\n            # The `development` network points to Ganache, it's configured in\n            truffle/truffle-config.js on line 45.\n          </span>\n        </code>\n      </details>\n    </>\n  );\n}\n\nexport default Setup;\n"],"mappings":";;;;AAAA,SAASA,KAAT,GAAiB;EAEf,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eASE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAkBE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA,WACI,gBADJ,EAEI,2CAFJ,eAGE;UAAM,SAAS,EAAC,WAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA,gBADF;AAoCD;;KAtCQA,K;AAwCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}