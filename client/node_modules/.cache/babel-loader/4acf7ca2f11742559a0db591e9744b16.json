{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\"; // @TODO: Merge this with bytes\n\nexport var FixedBytesCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(FixedBytesCoder, _Coder);\n\n  var _super = _createSuper(FixedBytesCoder);\n\n  function FixedBytesCoder(size, localName) {\n    var _this;\n\n    _classCallCheck(this, FixedBytesCoder);\n\n    var name = \"bytes\" + String(size);\n    _this = _super.call(this, name, name, localName, false);\n    _this.size = size;\n    return _this;\n  }\n\n  _createClass(FixedBytesCoder, [{\n    key: \"encode\",\n    value: function encode(writer, value) {\n      var data = arrayify(value);\n\n      if (data.length !== this.size) {\n        this._throwError(\"incorrect data length\", value);\n      }\n\n      return writer.writeBytes(data);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n  }]);\n\n  return FixedBytesCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/fixed-bytes.ts"],"names":[],"mappings":"AAAA;;;;;;AAEA,SAAS,QAAT,EAA8B,OAA9B,QAA6C,sBAA7C;AAEA,SAAS,KAAT,QAAsC,kBAAtC,C,CAEA;;AACA,WAAa,eAAb;EAAA;;EAAA;;EAGI,yBAAY,IAAZ,EAA0B,SAA1B,EAA2C;IAAA;;IAAA;;IACvC,IAAI,IAAI,GAAG,UAAU,MAAM,CAAC,IAAD,CAA3B;IACA,0BAAM,IAAN,EAAY,IAAZ,EAAkB,SAAlB,EAA6B,KAA7B;IACA,MAAK,IAAL,GAAY,IAAZ;IAHuC;EAI1C;;EAPL;IAAA;IAAA,OASI,gBAAO,MAAP,EAAuB,KAAvB,EAAuC;MACnC,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAD,CAAnB;;MACA,IAAI,IAAI,CAAC,MAAL,KAAgB,KAAK,IAAzB,EAA+B;QAAE,KAAK,WAAL,CAAiB,uBAAjB,EAA0C,KAA1C;MAAmD;;MACpF,OAAO,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAP;IACH;EAbL;IAAA;IAAA,OAeI,gBAAO,MAAP,EAAqB;MACjB,OAAO,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,OAAO,CAAC,MAAM,CAAC,SAAP,CAAiB,KAAK,IAAtB,CAAD,CAAhC,CAAP;IACH;EAjBL;;EAAA;AAAA,EAAqC,KAArC","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map"]},"metadata":{},"sourceType":"module"}