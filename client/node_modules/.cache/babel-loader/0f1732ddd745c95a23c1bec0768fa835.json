{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Kapil D/Personal/DecentralizedDeliveries/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nvar _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nvar _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    var missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nvar _normalizeError = _checkNormalize();\n\nexport var LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficient funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\"; // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n\n;\nvar HEX = \"0123456789abcdef\";\nexport var Logger = /*#__PURE__*/function () {\n  function Logger(version) {\n    _classCallCheck(this, Logger);\n\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _createClass(Logger, [{\n    key: \"_log\",\n    value: function _log(logLevel, args) {\n      var level = logLevel.toLowerCase();\n\n      if (LogLevels[level] == null) {\n        this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n      }\n\n      if (_logLevel > LogLevels[level]) {\n        return;\n      }\n\n      console.log.apply(console, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._log(Logger.levels.DEBUG, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._log(Logger.levels.INFO, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._log(Logger.levels.WARNING, args);\n    }\n  }, {\n    key: \"makeError\",\n    value: function makeError(message, code, params) {\n      // Errors are being censored\n      if (_censorErrors) {\n        return this.makeError(\"censored error\", code, {});\n      }\n\n      if (!code) {\n        code = Logger.errors.UNKNOWN_ERROR;\n      }\n\n      if (!params) {\n        params = {};\n      }\n\n      var messageDetails = [];\n      Object.keys(params).forEach(function (key) {\n        var value = params[key];\n\n        try {\n          if (value instanceof Uint8Array) {\n            var hex = \"\";\n\n            for (var i = 0; i < value.length; i++) {\n              hex += HEX[value[i] >> 4];\n              hex += HEX[value[i] & 0x0f];\n            }\n\n            messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n          } else {\n            messageDetails.push(key + \"=\" + JSON.stringify(value));\n          }\n        } catch (error) {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n        }\n      });\n      messageDetails.push(\"code=\".concat(code));\n      messageDetails.push(\"version=\".concat(this.version));\n      var reason = message;\n      var url = \"\";\n\n      switch (code) {\n        case ErrorCode.NUMERIC_FAULT:\n          {\n            url = \"NUMERIC_FAULT\";\n            var fault = message;\n\n            switch (fault) {\n              case \"overflow\":\n              case \"underflow\":\n              case \"division-by-zero\":\n                url += \"-\" + fault;\n                break;\n\n              case \"negative-power\":\n              case \"negative-width\":\n                url += \"-unsupported\";\n                break;\n\n              case \"unbound-bitwise-result\":\n                url += \"-unbound-result\";\n                break;\n            }\n\n            break;\n          }\n\n        case ErrorCode.CALL_EXCEPTION:\n        case ErrorCode.INSUFFICIENT_FUNDS:\n        case ErrorCode.MISSING_NEW:\n        case ErrorCode.NONCE_EXPIRED:\n        case ErrorCode.REPLACEMENT_UNDERPRICED:\n        case ErrorCode.TRANSACTION_REPLACED:\n        case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n          url = code;\n          break;\n      }\n\n      if (url) {\n        message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n      }\n\n      if (messageDetails.length) {\n        message += \" (\" + messageDetails.join(\", \") + \")\";\n      } // @TODO: Any??\n\n\n      var error = new Error(message);\n      error.reason = reason;\n      error.code = code;\n      Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n      });\n      return error;\n    }\n  }, {\n    key: \"throwError\",\n    value: function throwError(message, code, params) {\n      throw this.makeError(message, code, params);\n    }\n  }, {\n    key: \"throwArgumentError\",\n    value: function throwArgumentError(message, name, value) {\n      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n        argument: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(condition, message, code, params) {\n      if (!!condition) {\n        return;\n      }\n\n      this.throwError(message, code, params);\n    }\n  }, {\n    key: \"assertArgument\",\n    value: function assertArgument(condition, message, name, value) {\n      if (!!condition) {\n        return;\n      }\n\n      this.throwArgumentError(message, name, value);\n    }\n  }, {\n    key: \"checkNormalize\",\n    value: function checkNormalize(message) {\n      if (message == null) {\n        message = \"platform missing String.prototype.normalize\";\n      }\n\n      if (_normalizeError) {\n        this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"String.prototype.normalize\",\n          form: _normalizeError\n        });\n      }\n    }\n  }, {\n    key: \"checkSafeUint53\",\n    value: function checkSafeUint53(value, message) {\n      if (typeof value !== \"number\") {\n        return;\n      }\n\n      if (message == null) {\n        message = \"value not safe\";\n      }\n\n      if (value < 0 || value >= 0x1fffffffffffff) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"out-of-safe-range\",\n          value: value\n        });\n      }\n\n      if (value % 1) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"non-integer\",\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"checkArgumentCount\",\n    value: function checkArgumentCount(count, expectedCount, message) {\n      if (message) {\n        message = \": \" + message;\n      } else {\n        message = \"\";\n      }\n\n      if (count < expectedCount) {\n        this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n\n      if (count > expectedCount) {\n        this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n    }\n  }, {\n    key: \"checkNew\",\n    value: function checkNew(target, kind) {\n      if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }, {\n    key: \"checkAbstract\",\n    value: function checkAbstract(target, kind) {\n      if (target === kind) {\n        this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n          name: target.name,\n          operation: \"new\"\n        });\n      } else if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }], [{\n    key: \"globalLogger\",\n    value: function globalLogger() {\n      if (!_globalLogger) {\n        _globalLogger = new Logger(version);\n      }\n\n      return _globalLogger;\n    }\n  }, {\n    key: \"setCensorship\",\n    value: function setCensorship(censorship, permanent) {\n      if (!censorship && permanent) {\n        this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      if (_permanentCensorErrors) {\n        if (!censorship) {\n          return;\n        }\n\n        this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      _censorErrors = !!censorship;\n      _permanentCensorErrors = !!permanent;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(logLevel) {\n      var level = LogLevels[logLevel.toLowerCase()];\n\n      if (level == null) {\n        Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n        return;\n      }\n\n      _logLevel = level;\n    }\n  }, {\n    key: \"from\",\n    value: function from(version) {\n      return new Logger(version);\n    }\n  }]);\n\n  return Logger;\n}();\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"sources":["../src.ts/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}