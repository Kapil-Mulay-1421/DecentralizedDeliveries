[{"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\index.js":"1","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\App.jsx":"2","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\index.js":"3","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\useEth.js":"4","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\EthContext.js":"5","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\state.js":"6","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\EthProvider.jsx":"7","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\RequestDelivery.jsx":"8","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\AcceptDelivery.jsx":"9","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\ProclaimDelivery.jsx":"10","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\About.jsx":"11"},{"size":254,"mtime":1656324156974,"results":"12","hashOfConfig":"13"},{"size":1896,"mtime":1660995480497,"results":"14","hashOfConfig":"13"},{"size":181,"mtime":1655358856000,"results":"15","hashOfConfig":"13"},{"size":145,"mtime":1655358856000,"results":"16","hashOfConfig":"13"},{"size":104,"mtime":1655358856000,"results":"17","hashOfConfig":"13"},{"size":424,"mtime":1655358856000,"results":"18","hashOfConfig":"13"},{"size":1835,"mtime":1660812767532,"results":"19","hashOfConfig":"13"},{"size":7858,"mtime":1660996471720,"results":"20","hashOfConfig":"13"},{"size":2257,"mtime":1660642310474,"results":"21","hashOfConfig":"13"},{"size":3058,"mtime":1660642347400,"results":"22","hashOfConfig":"13"},{"size":117,"mtime":1660991934028,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u5rh6b",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\index.js",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\App.jsx",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\index.js",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\useEth.js",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\EthContext.js",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\state.js",[],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\contexts\\EthContext\\EthProvider.jsx",["49"],"import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        if (networkID != 80001) {\n          alert(\"You are not connected to the Mumbai Test Network.\")\n        }\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/DeliveryHandler.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\RequestDelivery.jsx",["50","51","52","53","54","55","56","57","58"],"D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\AcceptDelivery.jsx",["59","60","61"],"import React, {useRef, useState} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nrequire('dotenv').config()\r\n\r\n\r\nconst serverUrl = \"http://localhost:3000\" + '/deliveries/'\r\nlet userAddress = null;\r\n\r\nconst AcceptDelivery = ({ setMining }) => {\r\n  \r\n    const { state: { contract, accounts } } = useEth()\r\n    const [deliveryRequests, setDeliveryRequests] = useState([])\r\n    if(accounts != null) {\r\n      userAddress = accounts[0]\r\n    }\r\n\r\n    if(userAddress != null) {\r\n      Axios.get(serverUrl+'stage/0').then(response => {\r\n        setDeliveryRequests(response.data)\r\n      })\r\n    }\r\n\r\n    const acceptDelivery = async (index) => {\r\n      const hash = deliveryRequests[index]._id\r\n      if(hash === '') {\r\n        alert('There was a problem, please try again.');\r\n        return;\r\n      }\r\n      // showing shadowLayer\r\n      setMining(true)\r\n      try {\r\n        await contract.methods.acceptDelivery(hash).send({from: accounts[0]}).then((response) => {\r\n          console.log(response)\r\n          alert(\"Accepted request. Head over to the Proclaims page once you make the delivery.\")\r\n        })\r\n      } catch(err) {\r\n        alert(err)\r\n      }\r\n      setMining(false)\r\n    }\r\n\r\n  return (\r\n    <div id='wrapper'>\r\n        <h2>Make a Delivery</h2>\r\n        <table id='deliveries'>\r\n          <tr>\r\n            <th>Index</th>\r\n            <th>Item</th>\r\n            <th>Pickup From</th>\r\n            <th>Deliver To</th>\r\n            <th>Reward(in wei)</th>\r\n            <th>Accept Delivery</th>\r\n          </tr>\r\n          {deliveryRequests != null ? deliveryRequests.map((req, index) =>  {\r\n            return (\r\n              <tr>\r\n                <td>{index+1}</td>\r\n                <td>{req.item}</td>\r\n                <td>{req.from}</td>\r\n                <td>{req.to}</td>\r\n                <td>{req.payment}</td>\r\n                <td><button onClick={() => acceptDelivery(index)}>Accept</button></td>\r\n              </tr>\r\n            )\r\n          }): console.log(\"deliveryRequests was null.\")}\r\n        </table>\r\n        {deliveryRequests != null ? deliveryRequests.length == 0 ? \"No delivery requests yet.\" : null : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AcceptDelivery","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\ProclaimDelivery.jsx",["62","63","64"],"import React, {useState} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nrequire('dotenv').config()\r\n\r\n\r\nconst serverUrl = \"http://localhost:3000\" + '/deliveries/'\r\nlet userAddress = null;\r\nlet listeningToCompleteEvent = false;\r\n\r\nconst ProclaimDelivery = ({ setMining }) => {\r\n  \r\n    const { state: { contract, accounts } } = useEth();\r\n    const [deliveryRequests, setDeliveryRequests] = useState([])\r\n    if(accounts != null) {\r\n      userAddress = accounts[0]\r\n    }\r\n\r\n    if(userAddress != null) {\r\n      Axios.get(serverUrl+'deliveryMan/' + userAddress).then(response => {\r\n        setDeliveryRequests(response.data)\r\n      })\r\n    }\r\n\r\n    const handleComplete = (log) => {\r\n      let requestId = log.returnValues.requestId\r\n      let tempRequests = deliveryRequests\r\n      tempRequests.forEach((request, index) => {\r\n        if (request._id == requestId) {\r\n          alert(\"The Delivery has been confirmed. The reward has been transferred to your account.\")\r\n        }\r\n      }) \r\n    }\r\n\r\n    // starting listener for Confirmation Event.\r\n    if (contract != null && !listeningToCompleteEvent) {\r\n      window.completeEvent = contract.events.CompleteEvent()\r\n      .on(\"data\", function(log) {\r\n        handleComplete(log);\r\n      })\r\n      listeningToCompleteEvent = true;\r\n    }\r\n\r\n    const proclaimDelivery = async (index) => {\r\n      const hash = deliveryRequests[index]._id\r\n      if(hash === '') {\r\n        alert('There was some problem. Please try again.');\r\n        return;\r\n      }\r\n      setMining(true)\r\n      try {\r\n        await contract.methods.allegeDelivery(hash).send({from: accounts[0]}).then((response) => {\r\n          console.log(response)\r\n          alert(\"Waiting for confirmation from customer. Money will be transferred to your account after confirmation.\")\r\n        })\r\n      } catch(err) {\r\n        alert(err)\r\n      }\r\n      setMining(false)\r\n    }\r\n\r\n  return (\r\n    <div id='wrapper'>\r\n        <h2>Proclaim your delivery</h2>\r\n        <table id='deliveries'>\r\n          <thead>\r\n            <tr>\r\n              <th>Index</th>\r\n              <th>Item</th>\r\n              <th>Pickup From</th>\r\n              <th>Deliver To</th>\r\n              <th>Reward</th>\r\n              <th>Accept Delivery</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {deliveryRequests != null ? deliveryRequests.map((req, index) =>  {\r\n            return (\r\n              <tr>\r\n                <td>{index+1}</td>\r\n                <td>{req.item}</td>\r\n                <td>{req.from}</td>\r\n                <td>{req.to}</td>\r\n                <td>{req.payment}</td>\r\n                <td><button onClick={() => proclaimDelivery(index)}>Proclaim</button></td>\r\n              </tr>\r\n            )\r\n          }): console.log(\"deliveryRequests was null.\")}\r\n          </tbody>\r\n        </table>\r\n        {deliveryRequests != null ? deliveryRequests.length == 0 ? \"No delivery requests yet.\" : null : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProclaimDelivery","D:\\Kapil D\\Personal\\DecentralizedDeliveries\\client\\src\\components\\About.jsx",[],{"ruleId":"65","severity":1,"message":"66","line":15,"column":23,"nodeType":"67","messageId":"68","endLine":15,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":8,"column":43,"nodeType":"67","messageId":"71","endLine":8,"endColumn":44},{"ruleId":"65","severity":1,"message":"72","line":31,"column":26,"nodeType":"67","messageId":"68","endLine":31,"endColumn":28},{"ruleId":"65","severity":1,"message":"72","line":34,"column":27,"nodeType":"67","messageId":"68","endLine":34,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":51,"column":6,"nodeType":"75","endLine":51,"endColumn":16,"suggestions":"76"},{"ruleId":"65","severity":1,"message":"72","line":145,"column":23,"nodeType":"67","messageId":"68","endLine":145,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":158,"column":23,"nodeType":"67","messageId":"68","endLine":158,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":226,"column":39,"nodeType":"67","messageId":"68","endLine":226,"endColumn":41},{"ruleId":"65","severity":1,"message":"72","line":226,"column":77,"nodeType":"67","messageId":"68","endLine":226,"endColumn":79},{"ruleId":"65","severity":1,"message":"72","line":226,"column":116,"nodeType":"67","messageId":"68","endLine":226,"endColumn":118},{"ruleId":"77","severity":1,"message":"78","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":8,"column":43,"nodeType":"67","messageId":"71","endLine":8,"endColumn":44},{"ruleId":"65","severity":1,"message":"72","line":69,"column":61,"nodeType":"67","messageId":"68","endLine":69,"endColumn":63},{"ruleId":"69","severity":1,"message":"70","line":8,"column":43,"nodeType":"67","messageId":"71","endLine":8,"endColumn":44},{"ruleId":"65","severity":1,"message":"72","line":30,"column":25,"nodeType":"67","messageId":"68","endLine":30,"endColumn":27},{"ruleId":"65","severity":1,"message":"72","line":92,"column":61,"nodeType":"67","messageId":"68","endLine":92,"endColumn":63},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accounts'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",{"desc":"82","fix":"83"},"Update the dependencies array to be: [accounts, contract]",{"range":"84","text":"85"},[1493,1503],"[accounts, contract]"]