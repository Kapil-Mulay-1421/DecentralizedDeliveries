{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/AcceptDelivery.jsx","components/RequestDelivery.jsx","components/ProclaimDelivery.jsx","components/About.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","alert","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","config","serverUrl","location","protocol","host","userAddress","AcceptDelivery","setMining","useState","deliveryRequests","setDeliveryRequests","Axios","get","then","response","acceptDelivery","index","hash","_id","methods","send","from","log","id","map","req","item","to","payment","onClick","length","listeningToAllegeEvent","listeningToAcceptEvent","RequestDelivery","requests","setRequests","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","c","charAt","substring","indexOf","getRequests","JSON","stringify","setTo","setFrom","setItem","setValue","allegeEvent","acceptEvent","AcceptEvent","handleAccept","AllegeEvent","handleAllege","handleInput","target","handleSubmit","requestDelivery","handleConfirm","requestId","confirm","returnValues","tempRequests","parse","request","status","deliveryMan","style","display","justifyContent","height","width","padding","overflow","className","marginTop","onChange","required","htmlFor","position","src","alt","href","listeningToCompleteEvent","ProclaimDelivery","completeEvent","CompleteEvent","handleComplete","proclaimDelivery","allegeDelivery","About","App","domain","slice","toLowerCase","changeRequest","mining","overflowX","zIndex","getComponent","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a644ed1a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        if (networkID != 80001) {\n          alert(\"You are not connected to the Mumbai Test Network.\")\n        }\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/DeliveryHandler.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import React, {useRef, useState} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nrequire('dotenv').config()\r\n\r\n\r\nconst serverUrl = window.location.protocol + \"//\" + window.location.host + '/deliveries/'\r\nlet userAddress = null;\r\n\r\nconst AcceptDelivery = ({ setMining }) => {\r\n  \r\n    const { state: { contract, accounts } } = useEth()\r\n    const [deliveryRequests, setDeliveryRequests] = useState([])\r\n    if(accounts != null) {\r\n      userAddress = accounts[0]\r\n    }\r\n\r\n    if(userAddress != null) {\r\n      Axios.get(serverUrl+'stage/0').then(response => {\r\n        setDeliveryRequests(response.data)\r\n      })\r\n    }\r\n\r\n    const acceptDelivery = async (index) => {\r\n      const hash = deliveryRequests[index]._id\r\n      if(hash === '') {\r\n        alert('There was a problem, please try again.');\r\n        return;\r\n      }\r\n      // showing shadowLayer\r\n      setMining(true)\r\n      try {\r\n        await contract.methods.acceptDelivery(hash).send({from: accounts[0]}).then((response) => {\r\n          console.log(response)\r\n          alert(\"Accepted request. Head over to the Proclaims page once you make the delivery.\")\r\n        })\r\n      } catch(err) {\r\n        alert(err)\r\n      }\r\n      setMining(false)\r\n    }\r\n\r\n  return (\r\n    <div id='wrapper'>\r\n        <h2>Make a Delivery</h2>\r\n        <table id='deliveries'>\r\n          <tr>\r\n            <th>Index</th>\r\n            <th>Item</th>\r\n            <th>Pickup From</th>\r\n            <th>Deliver To</th>\r\n            <th>Reward(in wei)</th>\r\n            <th>Accept Delivery</th>\r\n          </tr>\r\n          {deliveryRequests != null ? deliveryRequests.map((req, index) =>  {\r\n            return (\r\n              <tr>\r\n                <td>{index+1}</td>\r\n                <td>{req.item}</td>\r\n                <td>{req.from}</td>\r\n                <td>{req.to}</td>\r\n                <td>{req.payment}</td>\r\n                <td><button onClick={() => acceptDelivery(index)}>Accept</button></td>\r\n              </tr>\r\n            )\r\n          }): console.log(\"deliveryRequests was null.\")}\r\n        </table>\r\n        {deliveryRequests != null ? deliveryRequests.length == 0 ? \"No delivery requests yet.\" : null : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AcceptDelivery","import React, {useState, useEffect} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Axios from 'axios'\r\nimport \"../App.css\"\r\nrequire('dotenv').config()\r\n\r\n\r\nconst serverUrl = window.location.protocol + \"//\" + window.location.host + '/deliveries/'\r\nlet userAddress = null;\r\n\r\nlet listeningToAllegeEvent = false;\r\nlet listeningToAcceptEvent = false;\r\n\r\nconst RequestDelivery = ({ setMining }) => {\r\n  const { state: { contract, accounts } } = useEth();\r\n  const [requests, setRequests] = useState([])\r\n\r\n  function setCookie(cname, cvalue, exdays) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n    let expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  }\r\n\r\n  function getCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(accounts != null) {\r\n      userAddress = accounts[0]\r\n    }\r\n    if(userAddress != null) {\r\n      Axios.get(serverUrl+'address/' + userAddress).then(response => {\r\n        setRequests(response.data)\r\n        setCookie(\"requests\", JSON.stringify(response.data), 7)\r\n      })\r\n    }\r\n  }, [contract])\r\n\r\n  function getRequests() {\r\n    Axios.get(serverUrl+'address/' + userAddress).then(response => {\r\n      setRequests(response.data)\r\n      setCookie(\"requests\", JSON.stringify(response.data), 7)\r\n    })\r\n  }\r\n\r\n\r\n  const [to, setTo] = useState(null)\r\n  const [from, setFrom] = useState(null)\r\n  const [item, setItem] = useState(null)\r\n  const [value, setValue] = useState(0)\r\n  window.allegeEvent = null;\r\n\r\n\r\n  // starting listener for Accept Event.\r\n  if (contract != null && !listeningToAcceptEvent) {\r\n    window.acceptEvent = contract.events.AcceptEvent()\r\n    .on(\"data\", function(log) {\r\n      handleAccept(log);\r\n    })\r\n    listeningToAcceptEvent = true;\r\n  }\r\n\r\n  // starting listener for Allege Event.\r\n  if (contract != null && !listeningToAllegeEvent) {\r\n    window.allegeEvent = contract.events.AllegeEvent()\r\n    .on(\"data\", function(log) {\r\n      handleAllege(log);\r\n    })\r\n    listeningToAllegeEvent = true;\r\n  }\r\n\r\n  const handleInput = e => {\r\n    switch(e.target.name) {\r\n        case 'to': \r\n            setTo(e.target.value);\r\n            break;\r\n        case 'from':\r\n            setFrom(e.target.value);\r\n            break;\r\n        case 'item': \r\n            setItem(e.target.value);\r\n            break;\r\n        case 'value': \r\n            setValue(e.target.value);\r\n            break;\r\n        default: \r\n            alert('Invalid input source.')\r\n            break;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    // Validation: \r\n    if (to === null || from === null || item === null || value === 0) {\r\n        alert(\"Please fill in all the values.\")\r\n        return;\r\n    }\r\n\r\n    // Calling Contract if validation succeeds: \r\n    // Showing shadowLayer:\r\n    setMining(true)\r\n    try {\r\n      await contract.methods.requestDelivery(to, from, item).send({from: accounts[0], value: value}).then((response) => {\r\n        getRequests()\r\n        console.log(response)\r\n      })\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n    setMining(false)\r\n  }\r\n\r\n  window.handleConfirm = async (index) => {\r\n    let requestId = requests[index]._id\r\n    setMining(true)\r\n    try {\r\n      await contract.methods.confirm(requestId).send({from: accounts[0]}).then((response) => {\r\n        getRequests()\r\n        console.log(response)\r\n      })\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n    setMining(false)\r\n  }\r\n\r\n  const handleAccept = (log) => {\r\n    let requestId = log.returnValues.requestId\r\n    let tempRequests = JSON.parse(getCookie(\"requests\"))\r\n    tempRequests.forEach((request, index) => {\r\n      if (request._id == requestId) {\r\n        tempRequests[index].status = 1\r\n        tempRequests[index].deliveryMan = log.returnValues.deliveryMan\r\n        setRequests(tempRequests)\r\n        return;\r\n      }\r\n    }) \r\n  }\r\n\r\n  const handleAllege = (log) => {\r\n    let requestId = log.returnValues.requestId\r\n    let tempRequests = JSON.parse(getCookie(\"requests\"))\r\n    tempRequests.forEach((request, index) => {\r\n      if (request._id == requestId) {\r\n        tempRequests[index].status = 2\r\n        setRequests(tempRequests)\r\n        return;\r\n      }\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", justifyContent: \"space-between\", height: \"100vh\", width: \"100vw\"}}>\r\n    <div id='wrapper' style={{padding: \"50px\", height: \"100vh\", width: \"50vw\", overflow: \"auto\"}}>\r\n      <h1>Welcome to Decentralized Deliveries</h1>\r\n      <div className='align-center'>\r\n        <h2 style={{marginTop: \"50px\"}}>Request a Delivery</h2>\r\n        <div id='form-input-wrapper'>\r\n\r\n          <div className='group'>\r\n            <input type=\"text\" name='item' onChange={handleInput} required />\r\n            <span className=\"highlight\"></span>\r\n            <span className=\"bar\"></span>\r\n            <label htmlFor=\"item\">Pick this up: </label>\r\n          </div>\r\n\r\n          <div className='group'>\r\n            <input type=\"text\" name='to' onChange={handleInput} required />\r\n            <span className=\"highlight\"></span>\r\n            <span className=\"bar\"></span>\r\n            <label htmlFor=\"to\">Delivery Destination: </label>\r\n          </div>\r\n      \r\n          <div className='group'>\r\n            <input type=\"text\" name='from' onChange={handleInput} required />\r\n            <span className=\"highlight\"></span>\r\n            <span className=\"bar\"></span>\r\n            <label htmlFor=\"from\">Pickup From: </label>\r\n          </div>\r\n    \r\n          <div className='group'>\r\n            <input type=\"number\" name='value' onChange={handleInput} required />\r\n            <span className=\"highlight\"></span>\r\n            <span className=\"bar\"></span>\r\n            <label htmlFor=\"value\">Attach payment(in wei): </label>\r\n          </div>\r\n\r\n        </div>\r\n        <button style={{marginTop: \"30px\"}} onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n\r\n      <div className='align-center'>\r\n        <h2>Your Orders</h2>\r\n        <table id='deliveries'>\r\n          <thead>\r\n            <tr>\r\n              <th>Index</th>\r\n              <th>Item</th>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {requests != null ? requests.map((request, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index+1}</td>\r\n                  <td>{request.item}</td>\r\n                  <td>{request.from}</td>\r\n                  <td>{request.to}</td>\r\n                  <td>{request.status == \"0\" ? \"Requested\" : request.status == '1' ? \"on the way\" : request.status == '2' ? <button onClick={() => window.handleConfirm(index)}>Confirm</button> : \"Completed.\"}</td>\r\n              </tr>\r\n              )\r\n            }): \"You have not requestsed anything yet.\"}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div  style={{height: \"100vh\", width: \"50vw\", overflow: \"hidden\", position: 'relative'}}>\r\n      <img src=\"../../homePageImg.jpg\" alt=\"\" style={{height: \"100%\", width: \"auto\"}} />\r\n      <p className=\"credit\">Photo by <a href=\"https://unsplash.com/@anniespratt?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Annie Spratt</a> on <a href=\"https://unsplash.com/s/photos/basket?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a></p>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RequestDelivery","import React, {useState} from 'react'\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nrequire('dotenv').config()\r\n\r\n\r\nconst serverUrl = window.location.protocol + \"//\" + window.location.host + '/deliveries/'\r\nlet userAddress = null;\r\nlet listeningToCompleteEvent = false;\r\n\r\nconst ProclaimDelivery = ({ setMining }) => {\r\n  \r\n    const { state: { contract, accounts } } = useEth();\r\n    const [deliveryRequests, setDeliveryRequests] = useState([])\r\n    if(accounts != null) {\r\n      userAddress = accounts[0]\r\n    }\r\n\r\n    if(userAddress != null) {\r\n      Axios.get(serverUrl+'deliveryMan/' + userAddress).then(response => {\r\n        setDeliveryRequests(response.data)\r\n      })\r\n    }\r\n\r\n    const handleComplete = (log) => {\r\n      let requestId = log.returnValues.requestId\r\n      let tempRequests = deliveryRequests\r\n      tempRequests.forEach((request, index) => {\r\n        if (request._id == requestId) {\r\n          alert(\"The Delivery has been confirmed. The reward has been transferred to your account.\")\r\n        }\r\n      }) \r\n    }\r\n\r\n    // starting listener for Confirmation Event.\r\n    if (contract != null && !listeningToCompleteEvent) {\r\n      window.completeEvent = contract.events.CompleteEvent()\r\n      .on(\"data\", function(log) {\r\n        handleComplete(log);\r\n      })\r\n      listeningToCompleteEvent = true;\r\n    }\r\n\r\n    const proclaimDelivery = async (index) => {\r\n      const hash = deliveryRequests[index]._id\r\n      if(hash === '') {\r\n        alert('There was some problem. Please try again.');\r\n        return;\r\n      }\r\n      setMining(true)\r\n      try {\r\n        await contract.methods.allegeDelivery(hash).send({from: accounts[0]}).then((response) => {\r\n          console.log(response)\r\n          alert(\"Waiting for confirmation from customer. Money will be transferred to your account after confirmation.\")\r\n        })\r\n      } catch(err) {\r\n        alert(err)\r\n      }\r\n      setMining(false)\r\n    }\r\n\r\n  return (\r\n    <div id='wrapper'>\r\n        <h2>Proclaim your delivery</h2>\r\n        <table id='deliveries'>\r\n          <thead>\r\n            <tr>\r\n              <th>Index</th>\r\n              <th>Item</th>\r\n              <th>Pickup From</th>\r\n              <th>Deliver To</th>\r\n              <th>Reward</th>\r\n              <th>Accept Delivery</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {deliveryRequests != null ? deliveryRequests.map((req, index) =>  {\r\n            return (\r\n              <tr>\r\n                <td>{index+1}</td>\r\n                <td>{req.item}</td>\r\n                <td>{req.from}</td>\r\n                <td>{req.to}</td>\r\n                <td>{req.payment}</td>\r\n                <td><button onClick={() => proclaimDelivery(index)}>Proclaim</button></td>\r\n              </tr>\r\n            )\r\n          }): console.log(\"deliveryRequests was null.\")}\r\n          </tbody>\r\n        </table>\r\n        {deliveryRequests != null ? deliveryRequests.length == 0 ? \"No delivery requests yet.\" : null : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProclaimDelivery","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import { EthProvider } from \"./contexts/EthContext\";\nimport \"./App.css\";\nimport AcceptDelivery from \"./components/AcceptDelivery\";\nimport RequestDelivery from \"./components/RequestDelivery\";\nimport ProclaimDelivery from \"./components/ProclaimDelivery\";\nimport About from \"./components/About\";\nimport {useState} from \"react\";\nrequire('dotenv').config()\n\n\nfunction App() {\n  const domain = window.location.protocol + \"//\" + window.location.host\n  let location  = window.location.href\n  const [request, changeRequest] = useState(location.slice(domain.length, location.length).toLowerCase())\n  const [mining, setMining] = useState(false)\n\n  function getComponent(request) {\n    if (request === '/') {\n      changeRequest(\"/#/\")\n    }\n    if (request === '/#/') {\n      return <RequestDelivery setMining={setMining} />\n    }\n    if (request === '/#/acceptdelivery') {\n      return <AcceptDelivery setMining={setMining} />\n    }\n    if (request === '/#/proclaimdelivery') {\n      return <ProclaimDelivery setMining={setMining} />\n    }\n    if (request === '/#/about') {\n      return <About />\n    }\n  }\n\n  return (\n      <EthProvider>\n      <div id=\"App\" style={{position: \"relative\", overflowX: \"hidden\"}}>\n        <div id=\"shadowLayer\" className={mining?\"is-visible\":\"\"}></div>\n        <div className=\"topnav\" style={{position: \"absolute\", zIndex: \"2\", width: \"100%\"}}>\n          <a href=\"/#/\" onClick={() => changeRequest(\"/#/\")}>Home</a>\n          <a href=\"/#/acceptdelivery\" onClick={() => changeRequest(\"/#/acceptdelivery\")}>Accept Delivery</a>\n          <a href=\"/#/proclaimdelivery\" onClick={() => changeRequest(\"/#/proclaimdelivery\")}>Proclaims</a>\n          <a href=\"/#/about\" onClick={() => changeRequest(\"/#/about\")} style={{display: \"none\"}}>About</a>\n        </div>\n        <div className=\"container\">\n              {getComponent(request)}\n        </div>\n      </div>\n      </EthProvider>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}